
tags:
  - name: User
    description: API quản lý người dùng
paths:
  /api/user:
    get:
      summary: Lấy danh sách tất cả người dùng
      description: Lấy danh sách tất cả người dùng trong hệ thống.
      tags: [User]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  message:
                    type: string
                    example: "Get user success"
        '500':
          description: Lỗi server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Tạo người dùng mới
      description: Tạo một người dùng mới với thông tin cung cấp. Kiểm tra email và số điện thoại đã tồn tại, mã hóa mật khẩu trước khi lưu.
      tags: [User]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - phone
                - password
                - avatar
                - status
              properties:
                username:
                  type: string
                  description: Tên đăng nhập của người dùng
                  example: "nguyenvana"
                email:
                  type: string
                  format: email
                  description: Email người dùng
                  example: "nguyenvana@example.com"
                phone:
                  type: string
                  description: Số điện thoại
                  example: "0123456789"
                password:
                  type: string
                  description: Mật khẩu
                  example: "password123"
                avatar:
                  type: string
                  description: URL ảnh đại diện
                  example: "https://example.com/avatar.jpg"
                status:
                  type: string
                  enum: ["online", "offline", "away"]
                  description: Trạng thái người dùng
                  example: "online"
      responses:
        '200':
          description: Tạo người dùng thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
                    example: "Add user success"
        '400':
          description: Thiếu trường bắt buộc hoặc email/số điện thoại đã tồn tại
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Lỗi server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/user/{id}:
    get:
      summary: Lấy thông tin người dùng theo ID
      description: Lấy thông tin chi tiết của một người dùng dựa trên ID. Trả về lỗi nếu người dùng không tồn tại hoặc có trạng thái offline.
      tags: [User]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID của người dùng
          example: "507f1f77bcf86cd799439011"
      responses:
        '200':
          description: Thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
                    example: "Get user success"
        '404':
          description: Không tìm thấy người dùng hoặc người dùng offline
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Lỗi server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Cập nhật thông tin người dùng
      description: Cập nhật thông tin của một người dùng dựa trên ID. Các trường không bắt buộc có thể bỏ qua.
      tags: [User]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID của người dùng cần cập nhật
          example: "507f1f77bcf86cd799439011"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Tên đăng nhập của người dùng
                  example: "nguyenvana"
                email:
                  type: string
                  format: email
                  description: Email người dùng
                  example: "nguyenvana@example.com"
                phone:
                  type: string
                  description: Số điện thoại
                  example: "0123456789"
                password:
                  type: string
                  description: Mật khẩu mới (tùy chọn)
                  example: "newpassword123"
                avatar:
                  type: string
                  description: URL ảnh đại diện
                  example: "https://example.com/avatar.jpg"
                status:
                  type: string
                  enum: ["online", "offline", "away"]
                  description: Trạng thái người dùng
                  example: "online"
      responses:
        '200':
          description: Cập nhật thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
                    example: "Update user success"
        '404':
          description: Không tìm thấy người dùng
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Lỗi server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Xóa người dùng theo ID
      description: Xóa một người dùng dựa trên ID.
      tags: [User]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID của người dùng cần xóa
          example: "507f1f77bcf86cd799439011"
      responses:
        '200':
          description: Xóa thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
                    example: "Delete user success"
        '404':
          description: Không tìm thấy người dùng
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Lỗi server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/user/search/{phone}:
    get:
      summary: Tìm kiếm người dùng theo số điện thoại
      description: Tìm kiếm một người dùng dựa trên số điện thoại.
      tags: [User]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: phone
          required: true
          schema:
            type: string
          description: Số điện thoại của người dùng
          example: "0123456789"
      responses:
        '200':
          description: Thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
                    example: "Search user by phone number success"
        '404':
          description: Không tìm thấy người dùng
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Lỗi server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID của người dùng
          example: "507f1f77bcf86cd799439011"
        username:
          type: string
          description: Tên đăng nhập của người dùng
          example: "nguyenvana"
        email:
          type: string
          format: email
          description: Email người dùng
          example: "nguyenvana@example.com"
        phone:
          type: string
          description: Số điện thoại
          example: "0123456789"
        password:
          type: string
          description: Mật khẩu (được mã hóa)
          example: "$2b$10$..."
        avatar:
          type: string
          description: URL ảnh đại diện
          example: "https://example.com/avatar.jpg"
        status:
          type: string
          enum: ["online", "offline", "away"]
          description: Trạng thái người dùng
          example: "online"
        lastSeen:
          type: string
          format: date-time
          description: Thời gian người dùng được nhìn thấy lần cuối
          example: "2025-08-15T12:58:00Z"
        createdAt:
          type: string
          format: date-time
          description: Thời gian tạo người dùng
          example: "2025-08-15T12:58:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Thời gian cập nhật người dùng
          example: "2025-08-15T12:58:00Z"
      required:
        - username
        - email
        - phone
        - password
        - avatar
        - status
        - lastSeen
        - createdAt
        - updatedAt
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Trạng thái thành công
          example: false
        data:
          type: null
          description: Dữ liệu trả về (null cho lỗi)
        message:
          type: string
          description: Thông báo lỗi
          example: "User not found"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT